continue
products.size
products = @all_products.where(product_id: result)
continue
@result.size
@result = @products.where(product_id: result)
@products.where(product_id: result).size
continue
@products = @products.where(product_id: result).size
@p = @products.where(product_id: result).size
@products.size
@products = @products.where(product_id: result).size
@products.where(product_id: result).size
result
result.size
result.first
@products.select {|product| result.include?(product.id)}
continue
)
status: shopify_product["status"],
options: shopify_product["options"],
images: shopify_product.fetch("image",{})&.fetch("src",nil),
tags: shopify_product["tags"],
vendor: shopify_product["vendor"],
body_html: shopify_product["body_html"],
title: shopify_product["title"],
handle: shopify_product["handle"],
product = Product.new(id: shopify_product["id"],
continue
)
status: shopify_product["status"],
options: shopify_product["options"],
images: shopify_product.fetch("image",{})&.fetch("src",nil),
tags: shopify_product["tags"],
vendor: shopify_product["vendor"],
body_html: shopify_product["body_html"],
title: shopify_product["title"],
handle: shopify_product["handle"],
id: shopify_product["id"],
product = Product.new(
)
status: shopify_product["status"],
options: shopify_product["options"],
images: shopify_product.fetch("image",{})&.fetch("src",nil),
tags: shopify_product["tags"],
vendor: shopify_product["vendor"],
body_html: shopify_product["body_html"],
title: shopify_product["title"],
handle: shopify_product["handle"],
id: shopify_product["id"],
product = Product.new(
continue
shopify_product["variants"]
shopify_product.variants
shopify_product
shopify_products
continue
shopify_order["current_total_tax_set"]
shopify_order["current_total_tax"]
shopify_order["line_items"]
shopify_order["id"]
continue
@shopify_orders.first["current_total_tax"]
@shopify_orders.first
@shopify_orders
continue
@shopify_orders.first["id"]
@shopify_orders.first.id
@shopify_orders.first
@shopify_orders
continue
res
res = JSON.parse shopify.get('orders.json?status=any').body.gsub('=>', ':')
\res = JSON.parse shopify.get('orders.json?status=any').body.gsub('=>', ':')
continue
res.status
res = shopify.get('/products.json')
